[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "This is a companion for DevOps for Data Science by Alex K Gold (Chapman & Hall, copyright 2024, 9781032100340).\nEach chapter title to the left is a link to a slide deck.\n\nThese slides are being developed by this club.\nEach deck will open in its own tab.\nYou may want to type “s” at the start of each deck to open the speaker notes.\nJoin the Data Science Learning Community to participate in the discussion!\n\nWe follow the Data Science Learning Community Code of Conduct.",
    "crumbs": [
      "Welcome"
    ]
  },
  {
    "objectID": "17.html",
    "href": "17.html",
    "title": "17. Compute at Enterprise Scale",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "17. Compute at Enterprise Scale"
    ]
  },
  {
    "objectID": "17.html#meeting-videos",
    "href": "17.html#meeting-videos",
    "title": "17. Compute at Enterprise Scale",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "17. Compute at Enterprise Scale"
    ]
  },
  {
    "objectID": "15.html",
    "href": "15.html",
    "title": "15. Enterprise Networking",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "15. Enterprise Networking"
    ]
  },
  {
    "objectID": "15.html#meeting-videos",
    "href": "15.html#meeting-videos",
    "title": "15. Enterprise Networking",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "15. Enterprise Networking"
    ]
  },
  {
    "objectID": "13.html",
    "href": "13.html",
    "title": "13. Domains and DNS",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "13. Domains and DNS"
    ]
  },
  {
    "objectID": "13.html#meeting-videos",
    "href": "13.html#meeting-videos",
    "title": "13. Domains and DNS",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "13. Domains and DNS"
    ]
  },
  {
    "objectID": "11.html",
    "href": "11.html",
    "title": "11. Server Resources and Scaling",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "11. Server Resources and Scaling"
    ]
  },
  {
    "objectID": "11.html#meeting-videos",
    "href": "11.html#meeting-videos",
    "title": "11. Server Resources and Scaling",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "11. Server Resources and Scaling"
    ]
  },
  {
    "objectID": "08.html",
    "href": "08.html",
    "title": "8. The Command Line",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "8. The Command Line"
    ]
  },
  {
    "objectID": "08.html#meeting-videos",
    "href": "08.html#meeting-videos",
    "title": "8. The Command Line",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "8. The Command Line"
    ]
  },
  {
    "objectID": "06.html",
    "href": "06.html",
    "title": "6. Demystifying Docker",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "6. Demystifying Docker"
    ]
  },
  {
    "objectID": "06.html#meeting-videos",
    "href": "06.html#meeting-videos",
    "title": "6. Demystifying Docker",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "6. Demystifying Docker"
    ]
  },
  {
    "objectID": "04.html",
    "href": "04.html",
    "title": "4. Logging and Monitoring",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "4. Logging and Monitoring"
    ]
  },
  {
    "objectID": "04.html#meeting-videos",
    "href": "04.html#meeting-videos",
    "title": "4. Logging and Monitoring",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "4. Logging and Monitoring"
    ]
  },
  {
    "objectID": "02.html",
    "href": "02.html",
    "title": "2. Data Project Architecture",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "2. Data Project Architecture"
    ]
  },
  {
    "objectID": "02.html#meeting-videos",
    "href": "02.html#meeting-videos",
    "title": "2. Data Project Architecture",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "2. Data Project Architecture"
    ]
  },
  {
    "objectID": "videos/14/01.html",
    "href": "videos/14/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "videos/12/01.html",
    "href": "videos/12/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "videos/09/01.html",
    "href": "videos/09/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "videos/05/01.html",
    "href": "videos/05/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:44:58    priyanka gagneja:   fantastic question\n00:47:25    priyanka gagneja:   and dates"
  },
  {
    "objectID": "videos/03/01.html",
    "href": "videos/03/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:02:43    Gus Lipkin: East Coast US, 1pm local\n00:44:48    Gus Lipkin: https://xkcd.com/927/\n00:57:17    Jack Penzer:    Graph databases &lt;3"
  },
  {
    "objectID": "videos/01/01.html",
    "href": "videos/01/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:43:56    Tinashe Tapera: https://www.tidyverse.org/blog/2017/12/workflow-vs-script/\n00:45:19    Jon Harmon (jonthegeek):    That blog led to one of my favorite hex stickers: \"Everything I Know Is From Jenny Bryan\" https://raw.githubusercontent.com/MonkmanMH/EIKIFJB/main/EIKIFJB_sigmar_hex.png"
  },
  {
    "objectID": "slides/17.html#learning-objectives",
    "href": "slides/17.html#learning-objectives",
    "title": "Enterprise Server Management",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nSimplyfing Complexity Using Infrastructure as Code (IaC)\nHow to Scale and Stabilize Workloads in Enterprise-Level Organisations\nFacilitating Enterprise Workloads Management with Kubernetes"
  },
  {
    "objectID": "slides/17.html#simplyfing-complexity-using-infrastructure-as-code-iac",
    "href": "slides/17.html#simplyfing-complexity-using-infrastructure-as-code-iac",
    "title": "Enterprise Server Management",
    "section": "Simplyfing Complexity Using Infrastructure as Code (IaC)",
    "text": "Simplyfing Complexity Using Infrastructure as Code (IaC)\n\nServers should be cattle, not pets.\nAlex recommended a two-dimensional Dev/Test/Prod setup\n\n\nIT/Admin group make changes to the platform in a staging environment.\nData scientists are never granted access to the staging environments and must complete all of their work in the IT/Admin production environment.\n\nThe ideal approach to migrate servers and apps from staging to production is to use IaC and CI/CD to ensure that code changes always make it into production at the proper time."
  },
  {
    "objectID": "slides/17.html#how-to-scale-and-stabilize-workloads-in-enterprise-level-organisations",
    "href": "slides/17.html#how-to-scale-and-stabilize-workloads-in-enterprise-level-organisations",
    "title": "Enterprise Server Management",
    "section": "How to Scale and Stabilize Workloads in Enterprise-Level Organisations",
    "text": "How to Scale and Stabilize Workloads in Enterprise-Level Organisations\n\nVertical Scaling Limitations and Horizontal Scaling to the rescue\n\nBefore attempting horizontal scaling, it is usually always good to exhaust the portion of vertical scaling where costs climb linearly with computation.\n\nHigh Availability is achieved by\n\nUsing Load balancers in Horizontal scaling\n\nImagine a restaurant with one chef that is trying to serve meals to a hundred customers at once.\n\nThe chef can only cook one meal at a time, so the customers are getting frustrated with long wait times and some of them are leaving.This is because the chef is overloaded and cannot handle the intense workload.\nNow, imagine the restaurant hires three more chefs, all with the same skills and equipment as the first chef. The restaurant invests in a system where each chef has a buzzer that goes off when there are new orders waiting for them. The buzzer ensures that each chef knows exactly when they need to start cooking a new meal, and they do not get overwhelmed by too many orders at once.\nIn this analogy, the chefs represent servers or clusters, and the buzzer represents a load balancer.\n\n\nMaintaining a backup of the load balancer and the database/NAS.\n\n\n\n\nAdding Autoscaling (i.e. you save money when traffic is low)\n\nMany autoscaling frameworks these days assume that applications are mostly stateless."
  },
  {
    "objectID": "slides/17.html#facilitating-enterprise-workloads-management-with-kubernetes",
    "href": "slides/17.html#facilitating-enterprise-workloads-management-with-kubernetes",
    "title": "Enterprise Server Management",
    "section": "Facilitating Enterprise Workloads Management with Kubernetes",
    "text": "Facilitating Enterprise Workloads Management with Kubernetes\n\nKubernetes solves all three of the key enterprise IT/Admin challenges with running servers.\nIncreasing the processing power of your cluster is usually as simple as a few mouse clicks. On the other side, this makes it risky from a cost perspective.\nHelm is the standard tool for defining what’s running in the cluster.\nInstead of the ten steps required in a typical server-based deployment. There are just three steps for Kubernetes.\nWhat are the biggest strengths of Kubernetes as a scaling tool? What are some drawbacks?\n\nStrengths:\n\nAutomatic Load Balancing\nHorizontal Scaling\nInfrastructure Agnosticism\n\nDrawbacks:\n\nManaging and maintaining a Kubernetes cluster can be complex and time-consuming and really requires a highly competent Kubernetes admin\nNetworking in Kubernetes can also be quite complicated."
  },
  {
    "objectID": "slides/17.html#meeting-videos",
    "href": "slides/17.html#meeting-videos",
    "title": "Enterprise Server Management",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/15.html#learning-objectives",
    "href": "slides/15.html#learning-objectives",
    "title": "Enterprise Networking",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nUnderstand enterprise networking terminology.\nList some benefits of private networks and proxies.\nRecognize issues related to inbound proxies.\nRecognize issues related to outbound proxies."
  },
  {
    "objectID": "slides/15.html#enterprise-networking-terminology",
    "href": "slides/15.html#enterprise-networking-terminology",
    "title": "Enterprise Networking",
    "section": "Enterprise Networking Terminology",
    "text": "Enterprise Networking Terminology\n\nprivate network: a network that communicates with the wider internet via proxies; VPC (“Virtual private cloud”) on AWS\ninbound proxy: more formally “reverse proxy”; a server on the public network that routes traffic into a private network\noutbound proxy: more formally “forward proxy”; a server on the public network that routes traffic out of a private network"
  },
  {
    "objectID": "slides/15.html#benefits-of-private-networks",
    "href": "slides/15.html#benefits-of-private-networks",
    "title": "Enterprise Networking",
    "section": "Benefits of Private Networks",
    "text": "Benefits of Private Networks\n\nDeal with security issues at the proxies\nEasier to route traffic (and change routing) to specific servers\nEasier to manage ports\nCan block traffic to/from specific unwanted sources\n\nOr block all traffic and only allow specific white lists\n\nCan optionally handle authentication at the proxy & pass token/header along"
  },
  {
    "objectID": "slides/15.html#issues-with-inbound-proxies",
    "href": "slides/15.html#issues-with-inbound-proxies",
    "title": "Enterprise Networking",
    "section": "Issues with Inbound Proxies",
    "text": "Issues with Inbound Proxies\n\nConnections from your laptop to the server\nThings that are often configured:\n\nUpload/download file size limits.\nUpload/download/session timeouts.\n\nSigns that you might be fighting against an inbound proxy:\n\nUploads/downloads from you to the server fail or cut off early.\nYour session keeps ending (you have to log back in).\n\nSpecial case: Websockets\n\nOlder proxies might break things like Shiny and Streamlit."
  },
  {
    "objectID": "slides/15.html#issues-with-outbound-proxies",
    "href": "slides/15.html#issues-with-outbound-proxies",
    "title": "Enterprise Networking",
    "section": "Issues with Outbound Proxies",
    "text": "Issues with Outbound Proxies\n\nConnections from server to the internet\nRarer than inbound.\n\n“Air-gapped” often means “strong outbound proxy.”\n\nThings that can be impacted:\n\nDownloading packages (other than from internal package manager).\nAccessing external data (APIs).\nUpdating system libraries (hopefully your IT has a plan for this).\nSoftware licensing (software might ping a server).\n\nIT often open to allowing access to specific URLs, so ask!"
  },
  {
    "objectID": "slides/15.html#meeting-videos",
    "href": "slides/15.html#meeting-videos",
    "title": "Enterprise Networking",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/13.html#learning-objectives",
    "href": "slides/13.html#learning-objectives",
    "title": "DNS allows for human-readable addresses",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nDetails that we won’t dig into:\n\nDescribe the pieces of a fully qualified domain name (FQDN).\nExplain why DNS changes can take a long time to propagate.\nUse DNS records to route traffic to a domain.\n\nConfigure a domain name for an AWS EC2.\n\nAllocate an Elastic IP.\nConfigure DNS records to route traffic to an AWS EC2."
  },
  {
    "objectID": "slides/13.html#allocate-an-elastic-ip",
    "href": "slides/13.html#allocate-an-elastic-ip",
    "title": "DNS allows for human-readable addresses",
    "section": "Allocate an Elastic IP",
    "text": "Allocate an Elastic IP\n\n(Make sure the server from Chapter 12 is running, with /rstudio & /palmer via nginx)\nNavigate to “EC2” &gt; “Network & Security” &gt; “Elastic IPs”\n“Allocate Elastic IP Address” (and click “Allocate”)\n“Actions” / “Associate Elastic IP Address”\n\nFind the instance\n\nTo clean up, you can do “Actions” / “Release Elastic IP Addresses”"
  },
  {
    "objectID": "slides/13.html#configure-dns-records",
    "href": "slides/13.html#configure-dns-records",
    "title": "DNS allows for human-readable addresses",
    "section": "Configure DNS Records",
    "text": "Configure DNS Records\n\n(Register a domain)\nFind the “DNS” settings for that domain at your registrar\nAdd or edit 3 records:\n\nA * 12.345.678.90\nA @ 12.345.678.90\nCNAME www yourdomain.you"
  },
  {
    "objectID": "slides/13.html#reconfigure-nginx",
    "href": "slides/13.html#reconfigure-nginx",
    "title": "DNS allows for human-readable addresses",
    "section": "Reconfigure nginx",
    "text": "Reconfigure nginx\n\nsudo vim /etc/nginx/nginx.conf\nserver_name ec2.whatever; to server_name yourdomain.you www.yourdomain.you;\nsudo systemctl restart nginx\nVisit http://yourdomain.you/rstudio and http://yourdomain.you/palmer/stats\n\nChrome will yell at you since https won’t work yet. See the next chapter!"
  },
  {
    "objectID": "slides/13.html#meeting-videos",
    "href": "slides/13.html#meeting-videos",
    "title": "DNS allows for human-readable addresses",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1\n\n\n\n\nMeeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "slides/11.html#learning-objectives",
    "href": "slides/11.html#learning-objectives",
    "title": "Choosing the Right Server for You",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nAppreciate computation hardware/software\nCPU vs. GPU\nRAM vs Storage"
  },
  {
    "objectID": "slides/11.html#what-is-computing",
    "href": "slides/11.html#what-is-computing",
    "title": "Choosing the Right Server for You",
    "section": "What is Computing?",
    "text": "What is Computing?\n\nEverything on a computer is represented by a (usually very large) number.\nAt a hardware level the only thing computers do is add these numbers together.\nModern computers add very quickly and very accurately.\nComputing speed is limited by cores and clock\n\n\nclassroom as a computer"
  },
  {
    "objectID": "slides/11.html#cpu-the-physical-brain",
    "href": "slides/11.html#cpu-the-physical-brain",
    "title": "Choosing the Right Server for You",
    "section": "CPU: The physical brain",
    "text": "CPU: The physical brain\n\nCores: Available processing centers in a CPU (usually 4-32)\nClock speed: number of operations each core can accomplish (2-5 GHz, 2-5 billion operations per sec)\nMost recent improvement is a result of number of cores, and core usage, not clocks\n\n\nmoore’s law"
  },
  {
    "objectID": "slides/11.html#how-do-i-go-faster",
    "href": "slides/11.html#how-do-i-go-faster",
    "title": "Choosing the Right Server for You",
    "section": "How do I go faster…?",
    "text": "How do I go faster…?\n\nFor R/Python, fewer faster cores are usually preferable to many slower cores\nFor servers, keep it light:\n\n\\(n \\textrm{ cores} = 1 \\textrm{ core per user} + 1\\)"
  },
  {
    "objectID": "slides/11.html#gpu",
    "href": "slides/11.html#gpu",
    "title": "Choosing the Right Server for You",
    "section": "GPU",
    "text": "GPU\n\nSpecialized chips initially built for graphics\nMore numerous slower cores than CPU\n\n\nWhere a consumer-grade CPU has 4-16 cores, mid-range GPUs have 700-4,000 cores, but each one runs between 1% and 10% the speed of a CPU core.\n\n\nGreat for parallelisation (think Neural Nets)"
  },
  {
    "objectID": "slides/11.html#so-should-i-get-gpu",
    "href": "slides/11.html#so-should-i-get-gpu",
    "title": "Choosing the Right Server for You",
    "section": "So Should I Get GPU…?",
    "text": "So Should I Get GPU…?\n\nUsually, no (parallelising into &lt; 10 workers is often enough)\nYou’ll know you need a GPU when you get there\nDiscuss…\n\n\ndecisions, decisions"
  },
  {
    "objectID": "slides/11.html#ram",
    "href": "slides/11.html#ram",
    "title": "Choosing the Right Server for You",
    "section": "RAM",
    "text": "RAM\n\nBasically short term memory. When a process ends, it is destroyed (like when you quit RStudio)\nGet a computer with lots of RAM, probably\n\n\\(\\textrm{Necessary RAM} = \\textrm{max amount of data} \\times 3\\)\n\nIf it’s too big, move to disk (e.g. database, Arrow, dask, HDF5)\n\n\nBig data in R"
  },
  {
    "objectID": "slides/11.html#disk-storage",
    "href": "slides/11.html#disk-storage",
    "title": "Choosing the Right Server for You",
    "section": "Disk (Storage)",
    "text": "Disk (Storage)\n\nWhere physical files live and persist\nThe bigger the better (and cheaper nowadays)\n\n\\(\\textrm{Necessary Storage} = \\textrm{approx data} + 1 \\textrm{GB} \\times n \\textrm{ users}\\)"
  },
  {
    "objectID": "slides/11.html#scenarios",
    "href": "slides/11.html#scenarios",
    "title": "Choosing the Right Server for You",
    "section": "Scenarios",
    "text": "Scenarios\n\nYou try to load a big csv file into pandas in Python. It churns for a while and then crashes.\nYou go to build a new ML model on your data. You’d like to re-train the model once a day, but it turns out training this model takes 26 hours on your laptop.\nYou design an visualization Matplotlib , and create a whole bunch in a loop, you want to parallelize the operation. Right now you’re running on a t2.small with 1 CPU."
  },
  {
    "objectID": "slides/11.html#lab",
    "href": "slides/11.html#lab",
    "title": "Choosing the Right Server for You",
    "section": "Lab",
    "text": "Lab\nNot much to say here…🤷"
  },
  {
    "objectID": "slides/11.html#meeting-videos",
    "href": "slides/11.html#meeting-videos",
    "title": "Choosing the Right Server for You",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/08.html#learning-objectives",
    "href": "slides/08.html#learning-objectives",
    "title": "Getting Comfortable on the Command Line",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nThe structure of bash commands\nReferencing directories and files\nReading text files\nMoving and copying files\nServer Files\nWriting files"
  },
  {
    "objectID": "slides/08.html#bash-commands",
    "href": "slides/08.html#bash-commands",
    "title": "Getting Comfortable on the Command Line",
    "section": "bash Commands",
    "text": "bash Commands\n\nThe general structure: &lt;command&gt; &lt;flags + flag args&gt; &lt;command args&gt;\n\ncommand: What to do\nflags + flag args: Options for the command and options for those options\ncommand args: arguments to pass to the command\n\n\nListing files in the current directory\nWe want to list files in the specified directory. The bash command to list files is ls.\nR\n\ncommand: list.files()\nflags + flag args: all.files = TRUE\ncommand args: \".github\"\n\nlist.files(\".github\", all.files = TRUE)\nbash\n\ncommand: ls\nflags + flag args: -a\ncommand args: .github\n\nls -a .github\nLong Commands\n\nLong commands are split onto multiple lines with a trailing backslash\n\n\nthis is a \\\n  really really \\\n  long command"
  },
  {
    "objectID": "slides/08.html#directories-and-files",
    "href": "slides/08.html#directories-and-files",
    "title": "Getting Comfortable on the Command Line",
    "section": "Directories and Files",
    "text": "Directories and Files\n\n\n\nWhere am I?\nReference\n\n\n\n\nWhere was I born?\n/\n\n\nWhat town do I live in?\n\n\n\nWhere do I live?\n~\n\n\nWhere am I now?\n.\n\n\nWhere was I just before where I am now?\n..\n\n\n\n*There’s no easy way to access your current mount point\nWhat if you were a file?\nLet’s say you are this file: /r4ds/do4ds/cohort1/chapter8.Rmd\n\n\n\n\n\n\n\n\n\n\nFile System Root\nDrive\nHome Folder\nFolder (Your Room)\nFile\n\n\n\n\n/\nr4ds\ndo4ds\ncohort1\nchapter8.Rmd\n\n\n\nRevisiting the “Where am I? table”\n\n\n\nWhere am I?\nReference\n\n\n\n\nWhere was I born?\n/\n\n\nWhat town do I live in?\nr4ds\n\n\nWhere do I live?\ndo4ds\n\n\nWhere am I now?\ncohort1\n\n\nWhere was I just before where I am now?\ndo4ds\n\n\n\nWhat if you have a sudden urge to see the world?\nThe bash command to change directories is cd . In this case, you start at /r4ds/do4ds/cohort1 which is the directory for your (chapter8.Rmd) bedroom.\n\n\n\n\n\n\n\nQuest\nDirections\n\n\n\n\nVisiting your cousin in cohort2\ncd ../cohort2\n\n\nVisiting your second cousin in the advr/cohort1 bookclub\ncd ../../advr/cohort1\n\n\nYou’ve gotten lost and don’t know where you are and need directions to your second cousin in the advr/cohort1 bookclub\ncd /r4ds/advr/cohort1\n\n\nStopping by the hospital where you were born because they have great grilled cheese sandwiches in the cafeteria\ncd /\n\n\nGoing back to your room\ncd ~/cohort1\n\n\n\nAny path with .. is a relative path and only works from your current directory."
  },
  {
    "objectID": "slides/08.html#reading-text-files",
    "href": "slides/08.html#reading-text-files",
    "title": "Getting Comfortable on the Command Line",
    "section": "Reading Text Files",
    "text": "Reading Text Files\nLet’s take a look at pr_check.yml in our .github/workflows folder:\ncat .github/workflows/pr_check.yml\nThe Pipe\n\nLinux offers a pipe, |, similar to that of R and other functional languages\n\ntake the output of this | and give it to this as an input\n\n\nTo find the workflow branch:\ncat .github/workflows/pr_check.yml | grep branches\nTo show just the first six items in our current folder:\nls -a | head -n 6\nNotice that bash returns the current folder and the parent folder as items."
  },
  {
    "objectID": "slides/08.html#moving-and-copying-files",
    "href": "slides/08.html#moving-and-copying-files",
    "title": "Getting Comfortable on the Command Line",
    "section": "Moving and Copying Files",
    "text": "Moving and Copying Files\nLet’s say you are this file: /r4ds/do4ds/cohort1/chapter8.Rmd\n\n\n\n\n\n\n\n\n\n\nFile System Root\nDrive\nHome Folder\nFolder (Your Room)\nFile\n\n\n\n\n/\nr4ds\ndo4ds\ncohort1\nchapter8.Rmd\n\n\n\nWhat if you do some remodeling at home?\nThe rm command will remove something, with the options to do so recursively (-r) or to force it (-f). You can also copy (cp), move (mv), or make or remove directories (mkdir and rmdir).\n\n\n\n\n\n\n\nConstruction Phase\nCommand\n\n\n\n\nMove everything out of the kitchen into a spare room\nmv ~/kitchen/* ~/spare_room\n\n\nRemove the kitchen appliances\nrm ~/kitchen/stove.app ~/kitchen/fridge.app\n\n\nDemolish the kitchen\nrmdir ~/kitchen\n\n\nMake a new kitchen\nmkdir ~/kitchen\n\n\nMove everything into the new kitchen\nmv ~/spare_room/* ~/kitchen\n\n\n\nYou mv or cp from_here to_here"
  },
  {
    "objectID": "slides/08.html#server-files",
    "href": "slides/08.html#server-files",
    "title": "Getting Comfortable on the Command Line",
    "section": "Server Files",
    "text": "Server Files\n\nMoving things as one big file has much better throughput than many small files\n\nImagine sending someone a care package. You could send them individual items or one big box. The one big box is much easier to manage.\n\ntar packs and unpacks tarball files\n\nPack (create): tar -czf &lt;archive name&gt; &lt;file(s)&gt;\nUnpack (extract): tar -xfv &lt;archive name&gt;\n\nscp stands for “secure copy” and is a combination of ssh and cp"
  },
  {
    "objectID": "slides/08.html#writing-files",
    "href": "slides/08.html#writing-files",
    "title": "Getting Comfortable on the Command Line",
    "section": "Writing Files",
    "text": "Writing Files\nWith the Command Line\n\ntouch creates a file\n&gt; is similar to pipe, but it will write to a file\n&gt;&gt; is also similar to pipe, but it wall append to a file\n\ntouch file.txt\necho \"this goes in the file\" &gt; file.txt\necho \"this also goes in the file\" &gt;&gt; file.txt\nWith Command Line Text Editors\n\nThere are several text editors such as vi, vim, and nano that work directly in the command line\n\nSome are easier to use than others\n\n\nTo exit vim: 1. Hit the escape key on your keyboard 2. Type one of these, making sure to include the : - To write AND quit: :wq - To quit without having made changes: :q - To quit and not save changes: :q!\nIt’s okay if you don’t remember.\nMemes About Exiting Vim"
  },
  {
    "objectID": "slides/08.html#meeting-videos",
    "href": "slides/08.html#meeting-videos",
    "title": "Getting Comfortable on the Command Line",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/06.html#learning-objectives",
    "href": "slides/06.html#learning-objectives",
    "title": "Demystyfing Docker",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nDecide whether a container is the right tool for a given job.\nDownload and run pre-built Docker images.\nDescribe the stages of the Docker container lifecycle.\nBuild simple Dockerfiles for your own projects."
  },
  {
    "objectID": "slides/06.html#why-docker-matters-for-data-science",
    "href": "slides/06.html#why-docker-matters-for-data-science",
    "title": "Demystyfing Docker",
    "section": "Why docker matters for data science",
    "text": "Why docker matters for data science\n\nDocker creates standardized environments that are:\n\nReproducible\nPortable\nCollaborative\nScalable\n\n\n\n\n\n\nDocker allows us to set up infrastructure as code\nDocker enhances reproducibility by creating a reproducible environment all the way down to the operating system - important for highly regulated industries\nDocker allows you to develop your project using an image that may more closely match the production environment - important for Shiny apps and APIs\n\n\n\nSee An Introduction to Docker for R Users for a guide on reproducibility with Docker for R users"
  },
  {
    "objectID": "slides/06.html#what-is-docker",
    "href": "slides/06.html#what-is-docker",
    "title": "Demystyfing Docker",
    "section": "What is Docker?",
    "text": "What is Docker?\n\nAn open-source tool for building, sharing, and running software\n\n\n\n\n\n\n\n\nRequires a Linux operating system or the Windows Subsystem for Linux (WSL)\nWindows and macOS users download Docker Desktop, which comes with a Linux VM. Linux users are recommended to install the Docker Engine directly.\nThree terms to be familiar with are DockerFile, Docker Image, and Container Instances.\nNote that the names container and instance are often used interchangeably"
  },
  {
    "objectID": "slides/06.html#specify-your-environment-via-a-dockerfile",
    "href": "slides/06.html#specify-your-environment-via-a-dockerfile",
    "title": "Demystyfing Docker",
    "section": "Specify your environment via a Dockerfile",
    "text": "Specify your environment via a Dockerfile\n\nDockerfiles build Docker images\nDockerfiles are plain text files using FROM, RUN, COPY, and CMD commands\n\n\n1FROM ubuntu:latest\n2COPY my-data.csv /data/data.csv\n3RUN [\"head\", \"/data/data.csv\"]\n\n\n1\n\nDeclare the base image\n\n2\n\nCopy data.csv from the host’s working directory to the container’s data directory\n\n3\n\nPrint the first few rows of data.csv\n\n\n\n\n\n\nCreating your own Dockerfile is optional - many standard Docker images exist on Dockerhub (e.g. rocker/tidyverse)\nDockerfiles build images and also pull existing images"
  },
  {
    "objectID": "slides/06.html#docker-images-are-a-snapshot-of-your-environment",
    "href": "slides/06.html#docker-images-are-a-snapshot-of-your-environment",
    "title": "Demystyfing Docker",
    "section": "Docker images are a snapshot of your environment",
    "text": "Docker images are a snapshot of your environment\n\nDocker images contain the bundled software (e.g. OS, data, packages)\nDocker images can be shared with others via Docker hub\nDocker images can, in theory, be a standalone project\n\n\n\nOther container registries exist (e.g. Azure Container Registry)"
  },
  {
    "objectID": "slides/06.html#containers-are-an-ephemeral-instance-of-a-docker-image",
    "href": "slides/06.html#containers-are-an-ephemeral-instance-of-a-docker-image",
    "title": "Demystyfing Docker",
    "section": "Containers are an ephemeral instance of a Docker Image",
    "text": "Containers are an ephemeral instance of a Docker Image\n\nBy default, changes made to containers are lost on shutdown\nData can be preserved from instance to instance of the same container using mounted volumes\nContainers are a process that executes the layers of your Dockerfile"
  },
  {
    "objectID": "slides/06.html#meeting-videos",
    "href": "slides/06.html#meeting-videos",
    "title": "Demystyfing Docker",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/04.html#learning-objectives",
    "href": "slides/04.html#learning-objectives",
    "title": "Logging and Monitoring",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nDifferentiate between logs and metrics.\nLog events from your code using the {log4r} package.\nRecognize some open source options for emitting metrics."
  },
  {
    "objectID": "slides/04.html#logs-and-metrics",
    "href": "slides/04.html#logs-and-metrics",
    "title": "Logging and Monitoring",
    "section": "Logs and Metrics",
    "text": "Logs and Metrics\n\nLogs = events as they happen.\nMetrics = measurements of how things are working."
  },
  {
    "objectID": "slides/04.html#log4r-basics",
    "href": "slides/04.html#log4r-basics",
    "title": "Logging and Monitoring",
    "section": "log4r Basics",
    "text": "log4r Basics\n\n{log4r} vs {base} vs {cli}\n\n{base} message/warning/error have least structure.\n{cli} adds structure for human readability.\n{log4r} adds structure that’s useful for a stream of events (timestamp, etc)\n\nThe object created via logger() defines where things go & how they look."
  },
  {
    "objectID": "slides/04.html#log4r-layouts",
    "href": "slides/04.html#log4r-layouts",
    "title": "Logging and Monitoring",
    "section": "log4r Layouts",
    "text": "log4r Layouts\n\nAlex hinted at this but didn’t dig into it."
  },
  {
    "objectID": "slides/04.html#metrics",
    "href": "slides/04.html#metrics",
    "title": "Logging and Monitoring",
    "section": "Metrics",
    "text": "Metrics\n\nPrometheus = open source monitoring tool\nGrafana = open source viz for Prometheus\n{openmetrics} = R package to add metrics to {plumber} & {shiny}\n{vetiver} = RStudio’s model deployment framework, includes metrics\nHoping to revisit this in January (“What has changed?” meeting)"
  },
  {
    "objectID": "slides/04.html#review-discussion",
    "href": "slides/04.html#review-discussion",
    "title": "Logging and Monitoring",
    "section": "Review Discussion",
    "text": "Review Discussion\n\nDifferentiate between logs and metrics.\nLog events from your code using the {log4r} package.\nRecognize some open source options for emitting metrics."
  },
  {
    "objectID": "slides/04.html#meeting-videos",
    "href": "slides/04.html#meeting-videos",
    "title": "Logging and Monitoring",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/02.html#learning-objectives",
    "href": "slides/02.html#learning-objectives",
    "title": "Data Project Architecture",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nLearn about the three-layer app.\nLearn why the presentation layer is important and how can we handle its data.\nLearn about APIs."
  },
  {
    "objectID": "slides/02.html#the-three-layer-architecture",
    "href": "slides/02.html#the-three-layer-architecture",
    "title": "Data Project Architecture",
    "section": "The three layer architecture",
    "text": "The three layer architecture\nPoorly-architected software is likely to break when you share it or go to production. A standard software arquitechture for apps:\n\nThree layer app"
  },
  {
    "objectID": "slides/02.html#is-it-for-data-science-projects",
    "href": "slides/02.html#is-it-for-data-science-projects",
    "title": "Data Project Architecture",
    "section": "Is it for Data Science projects?",
    "text": "Is it for Data Science projects?\nThe three layers can help clarify parts of our projects, but:\n\nWe might not be designing an app\nWe usually have projects with many components\nApps run in response to user actions, data science projects run in response to updates to the data\nWe usually don’t have ownership on the data"
  },
  {
    "objectID": "slides/02.html#the-presentation-layer",
    "href": "slides/02.html#the-presentation-layer",
    "title": "Data Project Architecture",
    "section": "The presentation layer",
    "text": "The presentation layer\nIt is what our users will consume, so we have to choose it first. Options:\n\nA job: it changes something in another system.\nAn app: data science web apps to explore datasets.\nA report: might be static or have some interactive elements.\nAn API: for machine-to-machine communication."
  },
  {
    "objectID": "slides/02.html#section",
    "href": "slides/02.html#section",
    "title": "Data Project Architecture",
    "section": "",
    "text": "Decision workflow for presentation layer"
  },
  {
    "objectID": "slides/02.html#other-things-to-consider-for-the-presentation-layer",
    "href": "slides/02.html#other-things-to-consider-for-the-presentation-layer",
    "title": "Data Project Architecture",
    "section": "Other things to consider for the presentation layer",
    "text": "Other things to consider for the presentation layer\n\nDo less here. Keep only code that shows something to the user or that collects input from the user\nHave small data here, you want high performance.\n\nCan you precalculate anything before it goes to the presentation layer?\nCan you reduce the granularity of your data? Figure out the dimensions that will make sense to the user"
  },
  {
    "objectID": "slides/02.html#how-to-make-big-data-small",
    "href": "slides/02.html#how-to-make-big-data-small",
    "title": "Data Project Architecture",
    "section": "How to make big data small",
    "text": "How to make big data small\nDon’t pull all the data into your session. Instead:\n\nPush work to the data source: do anything you can do before you pull the data out.\nBe lazy with data pulls: pull the data that’s needed when it’s needed.\nSample the data. Makes sense for machine learning tasks but not for counting.\nChunk and pull. Identify natural groups."
  },
  {
    "objectID": "slides/02.html#where-to-store-the-data",
    "href": "slides/02.html#where-to-store-the-data",
    "title": "Data Project Architecture",
    "section": "Where to store the data",
    "text": "Where to store the data\nIt depends on how often it is updated. In the presentation bundle, only if the data and the app will be updated together.\n\nFilesystem: hard for deployment.\nBlob storage or pins: cloud storage like S3 from Amazon, Google Storeage or Azure. They usually have packages.\nGoogle sheets: maybe as an intermediate step.\n\nYou can also store your intermediate artifacts in .csv, pickle or rds files or use DuckDB."
  },
  {
    "objectID": "slides/02.html#how-about-an-api",
    "href": "slides/02.html#how-about-an-api",
    "title": "Data Project Architecture",
    "section": "How about an API?",
    "text": "How about an API?\n\n\n\nAPI: Application Programming Interface.\nSuited for the middle tier, you separate the processing logic into functions.\nFunction as a service. Functions, but in a completely separate process.\n{fastAPI} and {plumber} can help.\n\n\n\n\n\nAPI"
  },
  {
    "objectID": "slides/02.html#rest-apis",
    "href": "slides/02.html#rest-apis",
    "title": "Data Project Architecture",
    "section": "REST APIs",
    "text": "REST APIs\n\nREpresentational State Transfer:\nResources and URLs to identify each function.\nHTTP methods for CRUD operations.\nStateless: no client-specific context.\nRepresentations for requests and reponses: Json or XML.\n\nDataverse Access API"
  },
  {
    "objectID": "slides/02.html#write-a-data-flow-chart",
    "href": "slides/02.html#write-a-data-flow-chart",
    "title": "Data Project Architecture",
    "section": "Write a data flow chart",
    "text": "Write a data flow chart\n\nData flow chart"
  },
  {
    "objectID": "slides/02.html#review",
    "href": "slides/02.html#review",
    "title": "Data Project Architecture",
    "section": "Review",
    "text": "Review\nComprehension questions\n\nDo you ever think about your application layer?\nWhat libraries could you use to implement a three-layer architecture in R or Python?\nHow do you reduce the data requirements for your project?\nHow do you handle your intermediate artifacts?"
  },
  {
    "objectID": "slides/02.html#meeting-videos",
    "href": "slides/02.html#meeting-videos",
    "title": "Data Project Architecture",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1\n\n\n\n\nMeeting chat log\n\n00:02:43    Gus Lipkin: East Coast US, 1pm local\n00:44:48    Gus Lipkin: https://xkcd.com/927/\n00:57:17    Jack Penzer:    Graph databases &lt;3"
  },
  {
    "objectID": "slides/00.html#book-club-meetings",
    "href": "slides/00.html#book-club-meetings",
    "title": "Club meetings",
    "section": "Book club meetings",
    "text": "Book club meetings\n\nVolunteer leads discussion of a chapter\n\nThis is the best way to learn the material.\n\nPresentations:\n\nReview of material\nQuestions you have\nMaybe live demo",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#how-to-edit-the-slides",
    "href": "slides/00.html#how-to-edit-the-slides",
    "title": "Club meetings",
    "section": "How to edit the slides:",
    "text": "How to edit the slides:\n\nMore info about editing: this github repo\nIdeally convert existing Rmd to qmd as we go\nRecorded, available on the Data Science Learning Community YouTube Channel (DSLC.video)",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#pace",
    "href": "slides/00.html#pace",
    "title": "Club meetings",
    "section": "Pace",
    "text": "Pace\n\nGoal: 1 chapter/week\nOk to split overwhelming chapters\nOk to combine short chapters\nMeet every week except holidays, etc\n\nWe will meet even if scheduled presenter unavailable\n\nSlack is good place for offline discussion/troubleshooting",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#learning-objectives-los",
    "href": "slides/00.html#learning-objectives-los",
    "title": "Club meetings",
    "section": "Learning objectives (LOs)",
    "text": "Learning objectives (LOs)\n\nStudents who study with LOs in mind retain more\nTips:\n\nThink “After today’s session, you will be able to {LO}”\nVery roughly 1 per heading",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#group-introductions",
    "href": "slides/00.html#group-introductions",
    "title": "Club meetings",
    "section": "Group introductions",
    "text": "Group introductions\n\nIf you feel comfortable sharing:\n\nWho are you?\nWhere you calling in from? (If you’re not comfortable sharing, skip)\nHow long have you been using R?\nWhat was your introduction to R?\nWhat are you most looking forward to during the club?",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#learning-objectives",
    "href": "slides/00.html#learning-objectives",
    "title": "Club meetings",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nRecognize the history of DevOps.\nDifferentiate between DevOps (knowledge, practices, and tools) and IT/Admins (people and roles).\nRecognize red flags about IT/Admin functions and what they might indicate.\nOrganize the content that will be covered in this book.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#devops",
    "href": "slides/00.html#devops",
    "title": "Club meetings",
    "section": "Devops?",
    "text": "Devops?\n\nGrew out of Agile software development (2001).\n\nDeliver small units, collect feedback, iterate.\n\nNeeded similar process to get the iterations deployed.\nDevOps (~2010) is the system/discipline.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#devops-vs-itadmins",
    "href": "slides/00.html#devops-vs-itadmins",
    "title": "Club meetings",
    "section": "DevOps vs IT/Admins",
    "text": "DevOps vs IT/Admins\n\nDevOps\n\nKnowledge, practices, & tools\nPut things into prod\nSafely & easily\n\nIT/Admins\n\nPeople/roles who manage the servers, etc.\nMany names:\n\nInformation Technology (IT)\nSysAdmin\nSite Reliability Engineering (SRE)\nDevOps",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#red-flags-about-itadmins",
    "href": "slides/00.html#red-flags-about-itadmins",
    "title": "Club meetings",
    "section": "Red Flags about IT/Admins",
    "text": "Red Flags about IT/Admins\n\nSubdivided (security, databases, networking, etc)\n\nPros: Super-deep expertise.\nCons: Hard to find the right person.\n\nOutsourced\n\nPros: Companies can get competence fast.\nCons: Scheduling, often high turnover.\n\nNobody\n\nPros: Freedom!\nCons: It’s all up to you!",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#this-book",
    "href": "slides/00.html#this-book",
    "title": "Club meetings",
    "section": "This Book",
    "text": "This Book\n\nSection 1: Patterns & principles to grease the path to production.\nSection 2: Vocab & beginnings of DIY.\nSection 3: Hands-on DIY. Still very very in progress.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#devops-lessons-for-data-science",
    "href": "slides/00.html#devops-lessons-for-data-science",
    "title": "Club meetings",
    "section": "DevOps Lessons for Data Science",
    "text": "DevOps Lessons for Data Science\nLearning objectives:\n\nDescribe the core principles of DevOps.\nApply DevOps best practices to data science.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#the-5-tenets-of-devops",
    "href": "slides/00.html#the-5-tenets-of-devops",
    "title": "Club meetings",
    "section": "The 5 Tenets of DevOps",
    "text": "The 5 Tenets of DevOps\n\nCode should be well-tested and tests should be automated.\nUpdates should be frequent and low-risk.\nSecurity concerns should be considered up front as part of architecture.\nProduction systems should have monitoring and logging.\nFrequent opportunities for review, change, and updating should be built into the system – both culturally and technically.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#devops-for-data-science-12",
    "href": "slides/00.html#devops-for-data-science-12",
    "title": "Club meetings",
    "section": "DevOps for Data Science (1/2)",
    "text": "DevOps for Data Science (1/2)\n\nUse CI/CD ➡️ Code Promotion and Integration Processes\n\nStructure output so moving to prod or updating is easy.\n\nInfrastructure as Code ➡️ Manage Environments as Code\n\nReproducible & secure environments are… reproducible and secure!\n\nMicroservices ➡️ Data Science Project Components\n\nFigure out how to subdivide things to make updating less painful.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#devops-for-data-science-22",
    "href": "slides/00.html#devops-for-data-science-22",
    "title": "Club meetings",
    "section": "DevOps for Data Science (2/2)",
    "text": "DevOps for Data Science (2/2)\n\nMonitoring & Logging ➡️ Monitoring & Logging\n\nData science doesn’t do enough of this, but he’ll tell us how we should!\n\nOther Things ➡️ Other Things 🙃\n\nChapter about Docker for Data Science here, because it deserves its own chapter.\nSection 2 will be all about things like communication, collaboration, and review practices.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/00.html#section",
    "href": "slides/00.html#section",
    "title": "Club meetings",
    "section": "",
    "text": "Architect 👷🏻‍♀️ VS Archaeologist 🤠\nYou are a software engineer.",
    "crumbs": [
      "Club meetings"
    ]
  },
  {
    "objectID": "slides/01.html#learning-objectives",
    "href": "slides/01.html#learning-objectives",
    "title": "Environments as Code",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nList the three layers of data science environments.\nExplain why it’s important to control the package environment.\nUse {renv} (or {venv} and uv ) to control the package environment.\nRecognize when it is important to control the system environment."
  },
  {
    "objectID": "slides/01.html#recap",
    "href": "slides/01.html#recap",
    "title": "Environments as Code",
    "section": "Recap",
    "text": "Recap\nThe 5 tenets of DevOps from the intro call:\n\nCode should be well-tested and tests should be automated.\nUpdates should be frequent and low-risk.\nSecurity concerns should be considered up front as part of architecture.\nProduction systems should have monitoring and logging.\nFrequent opportunities for review, change, and updating should be built into the system – both culturally and technically."
  },
  {
    "objectID": "slides/01.html#chapter-1",
    "href": "slides/01.html#chapter-1",
    "title": "Environments as Code",
    "section": "Chapter 1",
    "text": "Chapter 1\n\nDevelopment\nTesting\nProduction\n\nr-lib and Github Actions\n“Servers as cattle”"
  },
  {
    "objectID": "slides/01.html#intro-discussion",
    "href": "slides/01.html#intro-discussion",
    "title": "Environments as Code",
    "section": "Intro Discussion",
    "text": "Intro Discussion\nBefore we dive in, who has experience with managing package environments in R and Python, and what do you guys think about each language’s ecosystem?\nWhich is simpler/more pleasant to use?\nHave you tried in R without RStudio?"
  },
  {
    "objectID": "slides/01.html#the-three-layers-of-environments",
    "href": "slides/01.html#the-three-layers-of-environments",
    "title": "Environments as Code",
    "section": "The Three Layers of Environments",
    "text": "The Three Layers of Environments\n\nPackages\nSystem\nHardware\n\nToday we will focus mainly on the first layer, the package environment."
  },
  {
    "objectID": "slides/01.html#the-package-environment",
    "href": "slides/01.html#the-package-environment",
    "title": "Environments as Code",
    "section": "The Package Environment",
    "text": "The Package Environment\n\nThe Data Scientist Life Cycle"
  },
  {
    "objectID": "slides/01.html#please-dont",
    "href": "slides/01.html#please-dont",
    "title": "Environments as Code",
    "section": "Please don’t",
    "text": "Please don’t\n\n\n\n# Check if dplyr installed\nif (!\"dplyr\" %in% row.names(installed.packages())) {\n  # install if not\n  install.packages(\"dplyr\")\n}\n\n\n\n\n\n\nnuh_uh"
  },
  {
    "objectID": "slides/01.html#why-not",
    "href": "slides/01.html#why-not",
    "title": "Environments as Code",
    "section": "Why not?",
    "text": "Why not?\n“This works fine for a while. But the problem with this is that the default has you installing things into a cache that’s shared among every project on your system.”\nIt’s also considered rude to make changes to a user’s system-level package setup.\nMore importantly, DevOps aims to help you make things that don’t break, installing packages without versions specified does not prevent things from breaking in the future."
  },
  {
    "objectID": "slides/01.html#the-rooms-of-a-house",
    "href": "slides/01.html#the-rooms-of-a-house",
    "title": "Environments as Code",
    "section": "The Rooms of a House",
    "text": "The Rooms of a House\nMost of us manage to fit everything we want in our homes, but it’s not all in the same room and we’re not bound to keep our rooms the same over time.\nAt any given time, we put things in different rooms for a variety of reasons; space and incompatible functions being the main two.\nThis is also true over time - perhaps even more so - we move rooms around, place things in and out of rooms according to our needs. It would be quite restrictive if we had to have everything, everywhere, all at once."
  },
  {
    "objectID": "slides/01.html#there-can-only-be-one",
    "href": "slides/01.html#there-can-only-be-one",
    "title": "Environments as Code",
    "section": "There Can Only Be One",
    "text": "There Can Only Be One\nIt would be more restrictive still, if we had to have incompatible things together. Kitchen and toilet together? No thanks\n\nYou must choose"
  },
  {
    "objectID": "slides/01.html#why",
    "href": "slides/01.html#why",
    "title": "Environments as Code",
    "section": "Why?",
    "text": "Why?\n‘Why can’t we have multiple version of the same package?’\n\nBecause noWhen it comes to managing package environments, each package is stored in a /Library folder and we can only have one version of each package in /Library"
  },
  {
    "objectID": "slides/01.html#virtual-environments-to-the-rescue",
    "href": "slides/01.html#virtual-environments-to-the-rescue",
    "title": "Environments as Code",
    "section": "Virtual Environments to the Rescue",
    "text": "Virtual Environments to the Rescue\nWe can’t have multiple versions of ‘package x’ in /Library, but we can have multiple versions of /Library, each with a different version of ‘package x’\n\n\n\n\n\nFrom source material\n\n\n\n\n\n\n\nway too smart"
  },
  {
    "objectID": "slides/01.html#using-renv",
    "href": "slides/01.html#using-renv",
    "title": "Environments as Code",
    "section": "Using Renv",
    "text": "Using Renv\n\nCreate a project\nCall renv::init() to create a standalone library\nCall renv::activate() this happens automatically if using RStudio projects\nInstall necessary packages with traditional syntax install.packages(\"dplyr\")\nCall renv::snapshot() to track versions etc.\n\n“* Lockfile written to ‘~/git_repos/bookclub-do4ds/renv.lock’.”"
  },
  {
    "objectID": "slides/01.html#renv_lock",
    "href": "slides/01.html#renv_lock",
    "title": "Environments as Code",
    "section": "renv_lock",
    "text": "renv_lock\nnow you have a file called renv.lock which has been updated with the project’s packages and their versions:\n\nrenv lock*see book for python equivalent i.e. virtualenv/venv and requirements.txt"
  },
  {
    "objectID": "slides/01.html#sharing-the-environment",
    "href": "slides/01.html#sharing-the-environment",
    "title": "Environments as Code",
    "section": "Sharing The Environment",
    "text": "Sharing The Environment\nNow that you have your lock file, you can send your project over to a friend/colleague and they should:\n\nDownload the project\nMove into the project directory through the cmd line in 2 ways: 1 Open the .RProj file with RStudio 2setwd('&lt;project-dir&gt;') e.g. if you made a projects folder in your home directory and a project within your projects folder named my_project: setwd(\"~/projects/my_project\")\nrenv::init()\nrenv::restore() - if this didn’t happen automatically"
  },
  {
    "objectID": "slides/01.html#avoiding-conda-in-production",
    "href": "slides/01.html#avoiding-conda-in-production",
    "title": "Environments as Code",
    "section": "Avoiding Conda in production",
    "text": "Avoiding Conda in production\n“In the context of a production environment, Conda smashes together the language version, the package management, and (sometimes) the system library management. … I generally recommend people use a tool that’s just for package management, like {venv}, as opposed to an all-in-one tool like Conda.”"
  },
  {
    "objectID": "slides/01.html#taking-control-of-the-system-environment",
    "href": "slides/01.html#taking-control-of-the-system-environment",
    "title": "Environments as Code",
    "section": "Taking Control of the System Environment",
    "text": "Taking Control of the System Environment\n“In other cases, your R or Python library might basically just be a wrapper for system libraries. For example, many popular packages for geospatial analysis are just thin language wrappers that call out to the system libraries. In this case, it might be important to be able to maintain a particular version of the underlying system library to ensure that your code runs at all in the future.”\nAs we have a chapter dedicated to Docker (which I haven’t read) I won’t dive into this here - I expect we’ll have run out of time too."
  },
  {
    "objectID": "slides/01.html#further-reading",
    "href": "slides/01.html#further-reading",
    "title": "Environments as Code",
    "section": "Further reading",
    "text": "Further reading\n\nhttps://rstats.wtf/\n👷 R in Production chapter about packages installation\nnix and {rix} /guix"
  },
  {
    "objectID": "slides/01.html#review",
    "href": "slides/01.html#review",
    "title": "Environments as Code",
    "section": "Review",
    "text": "Review\nWhat did we learn?\n\n\n\n\n\n\n\nLearning Objective\nWhat Did We Learn?\n\n\n\n\nList the three layers of data science environments.\n\n\n\nExplain why it’s important to control the package environment.\n\n\n\nUse {renv} (or {venv}) to control the package environment.\n\n\n\nRecognize when it is important to control the system environment."
  },
  {
    "objectID": "slides/03.html#learning-objectives",
    "href": "slides/03.html#learning-objectives",
    "title": "Designing Your Application Layers",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nSince these notes were prepared, this chapter has been split into two chapters. These notes have not been updated to reflect this change.\n\nLearning objectives:\n\nCompare and contrast the tiers of the three-tier app architecture vs the seven data science services.\nAnswer the two data-storage questions about an app: storage format and storage location.\nChoose the appropriate storage solution for an app.\nAuthorize an app to access data.\nConsider database-as-a-service options."
  },
  {
    "objectID": "slides/03.html#perspectives-on-data-science-projects",
    "href": "slides/03.html#perspectives-on-data-science-projects",
    "title": "Designing Your Application Layers",
    "section": "Perspectives on Data Science Projects",
    "text": "Perspectives on Data Science Projects\n\nDS vs SE Perspective\n\nData Flow Differences\n\n\n\nDS Vs SE\n\n\nThe software three-tier architecture vs the seven data science layers.\n\nWe as SE/DE think of systems as a puzzle pieces where each piece of the puzzle have to optimally fit/integrated with other puzzle pieces."
  },
  {
    "objectID": "slides/03.html#productionizing-apps",
    "href": "slides/03.html#productionizing-apps",
    "title": "Designing Your Application Layers",
    "section": "Productionizing apps",
    "text": "Productionizing apps\n\nMicroservices and tight coupling (SRP OR SOC)\nThe Idea of abstraction in software engineering & It’s relation to how we could create a good API.\nImportant distinction: Business Logic Vs App Logic\n\nApp Logic –&gt; is all about how the user interacts with the app\nBusiness Logic –&gt;is all about the data inputs based on your business\n\nWhat else comes to your mind when you move DS project to production?"
  },
  {
    "objectID": "slides/03.html#the-what-where-questions-of-storage",
    "href": "slides/03.html#the-what-where-questions-of-storage",
    "title": "Designing Your Application Layers",
    "section": "The What & Where Questions of Storage",
    "text": "The What & Where Questions of Storage\n\nWhat format would you use to store your data and why?\nWhere you gonna put your data?"
  },
  {
    "objectID": "slides/03.html#factors-we-should-consider-when-we-choose-our-storage-solution",
    "href": "slides/03.html#factors-we-should-consider-when-we-choose-our-storage-solution",
    "title": "Designing Your Application Layers",
    "section": "Factors we should consider when we choose our storage solution",
    "text": "Factors we should consider when we choose our storage solution\n\nData Access patterns\n\non The App level\non The Data Pipeline Level\n\nData Security\nHow big are the data we’re going to use inside our app?\n\nWhat are the performance criteria for the storage solution?\n\nThroughput –&gt; how many units of information can be processed by a system within a given timeframe.\nLatency –&gt; is the time it takes for data to pass from one point on a network to another."
  },
  {
    "objectID": "slides/03.html#data-authorization",
    "href": "slides/03.html#data-authorization",
    "title": "Designing Your Application Layers",
    "section": "Data authorization",
    "text": "Data authorization\n\nDon’t allow all users to have access to all data.\nAvoid ever putting credentials in plain-text.\nTrivial approach of using Sys or os in R and Python.\nRStudio Connect to the Rescue with an encryption option."
  },
  {
    "objectID": "slides/03.html#database-as-a-service",
    "href": "slides/03.html#database-as-a-service",
    "title": "Designing Your Application Layers",
    "section": "Database-as-a-service",
    "text": "Database-as-a-service\n\nWhen to use what? Database vs Datawarehouse vs Datalake.\nRecommended solutions: EBS, RDS, Redshift and S3.\nIs that all we got? (Hint: Not even close!!)."
  },
  {
    "objectID": "slides/03.html#review",
    "href": "slides/03.html#review",
    "title": "Designing Your Application Layers",
    "section": "Review",
    "text": "Review\nLeft those as an open discussion questions?\n\n\n\n\n\n\n\nLearning Objective\nWhat Did We Learn?\n\n\n\n\nCompare and contrast the tiers of the three-tier app architecture vs the seven data science services.\n\n\n\nAnswer the two data-storage questions about an app: storage format and storage location.\n\n\n\nChoose the appropriate storage solution for an app.\n\n\n\nAuthorize an app to access data.\n\n\n\nConsider database-as-a-service options."
  },
  {
    "objectID": "slides/03.html#meeting-videos",
    "href": "slides/03.html#meeting-videos",
    "title": "Designing Your Application Layers",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1\n\n\n\n\nMeeting chat log\n\n00:02:43    Gus Lipkin: East Coast US, 1pm local\n00:44:48    Gus Lipkin: https://xkcd.com/927/\n00:57:17    Jack Penzer:    Graph databases &lt;3"
  },
  {
    "objectID": "slides/05.html#learning-objectives",
    "href": "slides/05.html#learning-objectives",
    "title": "Code promotion and integration",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nDescribe the three environments used in software development and data science.\nUse GitHub Actions (GHA) to deploy data science assets.\nKeep environments in sync using infrastructure as code (IaC) tooling."
  },
  {
    "objectID": "slides/05.html#why-do-we-care-about-code-promotion-workflows",
    "href": "slides/05.html#why-do-we-care-about-code-promotion-workflows",
    "title": "Code promotion and integration",
    "section": "Why Do We Care About Code Promotion Workflows?",
    "text": "Why Do We Care About Code Promotion Workflows?\n\n\n\n(Image Source: Reddit)\n\n\n\nWithout foresight, live products can break. Users sad; supervisors mad.\nCode promotion reduces the risk of disaster by:\n\nModularizing processes\nTesting & checking rigorously\nMinimizing downtime\n\n\n\nWhat does code promotion look like?"
  },
  {
    "objectID": "slides/05.html#the-three-environments",
    "href": "slides/05.html#the-three-environments",
    "title": "Code promotion and integration",
    "section": "The Three Environments",
    "text": "The Three Environments\n\n\n\n(Image Source: Miami University)\n\n\nDev\n\nThe development environment is the product sandbox\nMost “data science” happens here:\n\nData analysis & modeling\nApp prototyping\nETL\n\n\nComparing dev for data science vs dev for software engineering:\n\n\n\n\n\n\n\nData Science\n\n\nSoftware Engineering\n\n\n\n\n\n\nGoal\n\n\nExplore relationships in data that may develop into live products\n\n\nBuild & implement a specific feature for a live product with pre-defined requirements\n\n\n\n\nTools\n\n\n“Fully fledged” data science IDE (RStudio, VSCode) can encompass Dev, Test, & Prod\n\n\nDev, Test, & Prod are differentiated by environments & containers\n\n\n\n\n\n\n\nMost of what data scientists do doesn’t end up as a live product in the state it was created; these entities think differently! (Source)\n\n\nTest\n\nTest is for testing :)\nTests used for many reasons incl. security, portability, performance, usability\n\nProd\n\nGold standard (where your live product is released into the wild)\nShould be guarded by Continuous Integration/Continuous Deployment (CI/CD)\nIdeally zero manual interaction and zero changes to the actual code"
  },
  {
    "objectID": "slides/05.html#cicd",
    "href": "slides/05.html#cicd",
    "title": "Code promotion and integration",
    "section": "CI/CD",
    "text": "CI/CD\n\nMost CI/CD processes are usually managed with git:\n\n\n\n\nThere are a handful of git workflow patterns for DevOps (Image Source: The book!)\n\n\nCI/CD processes are “triggered” by git changes (i.e. when code changes in test)\n\nGitHub is the leading provider for CI/CD via GitHub Actions (GHA)\n\nHow Does it Work?\nYou write code that tells the CI/CD tool to:\n\nBuild a clean, empty server on the cloud\nCopy your code with new changes and the bare-minimum requirements for it to run\nInstall and run any tests as specified; if tests fail, stop immediately and inform the developer\nAccept the new changes and “push” to production (automatically copy the changes to the live product)\n\nr-lib 📦 is your friend for getting started with GHA with R — See here"
  },
  {
    "objectID": "slides/05.html#per-environment-configuration",
    "href": "slides/05.html#per-environment-configuration",
    "title": "Code promotion and integration",
    "section": "Per-Environment Configuration",
    "text": "Per-Environment Configuration\n\nWhen servers are “stood up” by CI/CD, they can take many forms\nIt’s wise to test these forms for your users\nHow do you flexibly code CI/CD to test many forms? config 📦 in R is your friend, use it to set environment variables1\n\nWe’ll probably learn more about environment variables in chapter 7 + 8"
  },
  {
    "objectID": "slides/05.html#creating-maintaining-identical-environments",
    "href": "slides/05.html#creating-maintaining-identical-environments",
    "title": "Code promotion and integration",
    "section": "Creating & Maintaining Identical Environments",
    "text": "Creating & Maintaining Identical Environments\n\nServers should be cattle; not sheep/environments are pocket change\n\nServers should be unremarkable, used frequently and interchangeably\n\nTest environments should be identical to production; therefore, never fiddle with test when tests fail\n\nDoing so introduces servers to drift out of alignment\n\nInfrastructure as Code (IaC) are tools meant to manage these servers and changes"
  },
  {
    "objectID": "slides/05.html#review",
    "href": "slides/05.html#review",
    "title": "Code promotion and integration",
    "section": "Review",
    "text": "Review\n\n\n\n\n\n\n\nLearning Objective\nWhat Did We Learn?\n\n\n\n\nDescribe the three environments used in software development and data science.\n\nDev: where products are conceived and built\nTest: where products are rigorously tested against the many different environments they will encounter “in the wild”\nProd: where the live product exists “in the wild”\n\n\n\nUse GitHub Actions (GHA) to deploy data science assets.\nR users can do this with r-lib 📦\n\n\nKeep environments in sync using infrastructure as code (IaC) tooling.\n\nServers are cheap; use frequently\nIaC Tools help you stay away from drifting"
  },
  {
    "objectID": "slides/05.html#meeting-videos",
    "href": "slides/05.html#meeting-videos",
    "title": "Code promotion and integration",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1\n\n\n\n\nMeeting chat log\n\n00:44:58    priyanka gagneja:   fantastic question\n00:47:25    priyanka gagneja:   and dates"
  },
  {
    "objectID": "slides/07.html#learning-objectives",
    "href": "slides/07.html#learning-objectives",
    "title": "Getting Started with the Cloud",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nRecognize why you might (and might not) want to host services in the cloud.\nDifferentiate between IaaS, PaaS, and SaaS.\nList some common cloud services.\nStart and stop an EC2 instance on AWS."
  },
  {
    "objectID": "slides/07.html#quick-section-overview",
    "href": "slides/07.html#quick-section-overview",
    "title": "Getting Started with the Cloud",
    "section": "Quick Section Overview",
    "text": "Quick Section Overview\n\nSo this section is really targeting the student who wants to host a project for portfolio purposes, the hobbyist who’s hosting a toy project, or the data science leader who has no choice but to host things for themselves because they just can’t get IT/Admin support.\n\n🎉🎉🎉 I’ve been two of those things in the last year!"
  },
  {
    "objectID": "slides/07.html#why-cloud",
    "href": "slides/07.html#why-cloud",
    "title": "Getting Started with the Cloud",
    "section": "Why cloud?",
    "text": "Why cloud?\n\nIt probably isn’t cheaper.\nIt’s faster and easier.\n\nNo need to wait for new hardware to arrive and be installed."
  },
  {
    "objectID": "slides/07.html#things-as-a-service",
    "href": "slides/07.html#things-as-a-service",
    "title": "Getting Started with the Cloud",
    "section": "Things as a Service",
    "text": "Things as a Service\n\n\nInfrastructure as a Service (IaaS, “eye-az”) \n\n\nPlatform as a Service (PaaS, “pass”) \n\n\nSoftware as a Service (SaaS, “sass”)"
  },
  {
    "objectID": "slides/07.html#common-cloud-services",
    "href": "slides/07.html#common-cloud-services",
    "title": "Getting Started with the Cloud",
    "section": "Common Cloud Services",
    "text": "Common Cloud Services\n\n\n\n\n\n\n\n\n\nService\nAWS\nAzure\nGCP\n\n\n\n\nKubernetes cluster\nEKS (Elastic Kubernetes Service)\nAKS (Azure Kubernetes Service)\nGKE (Google Kubernetes Engine)\n\n\nRun a function as an API\nLambda\nAzure Functions\nGoogle Cloud Functions\n\n\nDatabase\nRDS/Redshift\nAzure Database\nGoogle Cloud SQL\n\n\nML Platform\nSageMaker\nAzure ML\nVertex AI"
  },
  {
    "objectID": "slides/07.html#discuss-the-lab",
    "href": "slides/07.html#discuss-the-lab",
    "title": "Getting Started with the Cloud",
    "section": "Discuss the Lab",
    "text": "Discuss the Lab\nhttps://aws.amazon.com"
  },
  {
    "objectID": "slides/07.html#meeting-videos",
    "href": "slides/07.html#meeting-videos",
    "title": "Getting Started with the Cloud",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/09.html#learning-objectives",
    "href": "slides/09.html#learning-objectives",
    "title": "Basic Linux SysAdmin",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nAdmin stuff that I won’t dig into:\n\nCreate users in Linux.\nCheck and set Linux file permissions.\nInstall programs on Debian-based Linux distributions.\nCheck storage usage.\nManage processes.\nImplement SSH port forwarding.\nLocate files on the $PATH.\n\nSet up a data science AWS EC2.\n\nRun RStudio on an AWS EC2.\nRun JupyterHub on an AWS EC2.\nRun a plumber API in a docker container on an AWS EC2."
  },
  {
    "objectID": "slides/09.html#stand-up-an-ec2-chapter-10-lab-review",
    "href": "slides/09.html#stand-up-an-ec2-chapter-10-lab-review",
    "title": "Basic Linux SysAdmin",
    "section": "Stand up an EC2 (chapter 10 lab review)",
    "text": "Stand up an EC2 (chapter 10 lab review)\n\nSign in at console.aws.amazon.com\nGo to EC2 (via services or other routes)\n“Launch instances”\nFill in the form:\n\nName (do4ds-lab)\nAMI: ubuntu\nType: t2.micro is free, might need larger later.\nKey pair: Choose or create. pem version no matter what you’re on.\nSecurity group: Choose or create.\nStorage: For now we aren’t using anything more than the root.\n\nWe’ll add more when we need it in a later lab.\nIt’s fine if you already added some, though.\n\n“Launch instance”\n\n“Instance state” menu to stop or terminate between labs."
  },
  {
    "objectID": "slides/09.html#create-a-non-root-user",
    "href": "slides/09.html#create-a-non-root-user",
    "title": "Basic Linux SysAdmin",
    "section": "Create a non-root user",
    "text": "Create a non-root user\n\n(“Instance state” &gt; “Start instance” to resume)\nCopy “Public IPv4 DNS” (will be $SERVER_ADDRESS below)\n\nsomething like “ec2-3-123-456-789.compute-1.amazonaws.com”\n\nssh -i ~/path/to/do4ds-lab-key.pem ubuntu@$SERVER_ADDRESS\nsudo adduser test-user\n\nGive them a password\nDefaults ok for everything else\n\nsudo usermod -aG sudo test-user (add to Group)"
  },
  {
    "objectID": "slides/09.html#add-an-ssh-key",
    "href": "slides/09.html#add-an-ssh-key",
    "title": "Basic Linux SysAdmin",
    "section": "Add an ssh key",
    "text": "Add an ssh key\n\nCreate new key from your local machine (if you don’t have one):\n\nOn Windows: ssh-keygen works but it’s fussy\nI named it id_rsa_test_user (but then I reverted to my personal id_rsa!)\nI didn’t use a password\n\nscp the key to the server\n\nscp -i ~/path/to/do4ds-lab-key.pem ~/path/to/id_rsa.pub ubuntu@@$SERVER_ADDRESS:/home/ubuntu\n\nOn server:\n\nmv & chown to user\nsu test-user & cd ~\nmkdir -p .ssh, chmod 700 .ssh, cat id_rsa.pub &gt;&gt; .ssh/authorized_keys\nchmod 600 .ssh/authorized_keys\nrm id_rsa.pub"
  },
  {
    "objectID": "slides/09.html#notes-on-personal-ssh-key",
    "href": "slides/09.html#notes-on-personal-ssh-key",
    "title": "Basic Linux SysAdmin",
    "section": "Notes on personal ssh key",
    "text": "Notes on personal ssh key\n\nI still need -i ~/path/to/id_rsa_test_user in ssh call\nIs this because I haven’t “set up an SSH config for this server”?\nUpdate: Nope! It was because I had 2 keys in my local.ssh folder"
  },
  {
    "objectID": "slides/09.html#install-r",
    "href": "slides/09.html#install-r",
    "title": "Basic Linux SysAdmin",
    "section": "Install R",
    "text": "Install R\n\ncurl -Ls https://github.com/r-lib/rig/releases/download/latest/rig-linux-arm64-latest.tar.gz | sudo tar xz -C /usr/local\nrig add release\nR"
  },
  {
    "objectID": "slides/09.html#install-rstudio-server",
    "href": "slides/09.html#install-rstudio-server",
    "title": "Basic Linux SysAdmin",
    "section": "Install RStudio Server",
    "text": "Install RStudio Server\n\nCheck current installation instructions\nsudo apt-get install gdebi-core\nwget https://download2.rstudio.org/server/jammy/amd64/rstudio-server-2022.12.0-353-amd64.deb\nsudo gdebi rstudio-server-2022.12.0-353-amd64.deb\nsudo systemctl status rstudio-server\nrm rstudio-server-2022.12.0-353-amd64.deb"
  },
  {
    "objectID": "slides/09.html#tunnel-to-see-it-locally",
    "href": "slides/09.html#tunnel-to-see-it-locally",
    "title": "Basic Linux SysAdmin",
    "section": "Tunnel to see it locally",
    "text": "Tunnel to see it locally\n\nOn your local machine:\n\nssh -NL 8787:localhost:8787 test-user@$SERVER_ADDRESS\nI had to add the N, I’m not sure what it does (got it from Google)\n\nIt’s alive!"
  },
  {
    "objectID": "slides/09.html#install-python-and-jupyterlab",
    "href": "slides/09.html#install-python-and-jupyterlab",
    "title": "Basic Linux SysAdmin",
    "section": "Install Python and JupyterLab",
    "text": "Install Python and JupyterLab\n\nI did not do this and hope to never do this."
  },
  {
    "objectID": "slides/09.html#plumber-in-docker",
    "href": "slides/09.html#plumber-in-docker",
    "title": "Basic Linux SysAdmin",
    "section": "Plumber in docker",
    "text": "Plumber in docker\n\nsudo apt-get install docker.io\n\nsudo docker ps to make sure it worked\n\n\nsudo docker run --rm -d \\\n  -p 8555:8000 \\\n  --name palmer-plumber \\\n  alexkgold/plumber\n\nssh -NL 8555:localhost:8555 test-user@$SERVER_ADDRESS\nIt’s an api!"
  },
  {
    "objectID": "slides/09.html#meeting-videos",
    "href": "slides/09.html#meeting-videos",
    "title": "Basic Linux SysAdmin",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1\n\n\n\n\nMeeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "slides/12.html#learning-objectives",
    "href": "slides/12.html#learning-objectives",
    "title": "Intro to Computer Networks",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nDetails that we won’t dig into:\n\nDescribe the pieces of a URL.\nBriefly explain how ports map to services.\nOutline how IP addresses map to servers.\nTroubleshoot common network problems.\n\nUse nginx to make multiple services available from a single server.\n\nInstall nginx on an Ubuntu server.\nAllow outside traffic to reach nginx on our AWS EC2.\nRoute traffic to RStudio via nginx.conf.\nRoute traffic to JupyterHub via nginx.conf (skipped here).\nRoute traffic to a plumber api via nginx.conf."
  },
  {
    "objectID": "slides/12.html#install-nginx",
    "href": "slides/12.html#install-nginx",
    "title": "Intro to Computer Networks",
    "section": "Install nginx",
    "text": "Install nginx\n\n(Make sure the server from Chapter 11 is running, with RStudio & the plumber API.)\nssh test-user@$SERVER_ADDRESS\nsudo apt install nginx"
  },
  {
    "objectID": "slides/12.html#allow-outside-traffic",
    "href": "slides/12.html#allow-outside-traffic",
    "title": "Intro to Computer Networks",
    "section": "Allow outside traffic",
    "text": "Allow outside traffic\n\n(Log into console.aws.amazon.com and navigate to EC2/Instances)\nClick the “Security” tab on your instance.\nClick the Security group (something like launch-wizard-2)\n\n(or go directly to “Network & Security”/“Security Groups”)\n\n“Inbound rules” &gt; “Edit inbound rules”\n“Add rule”\n\n“HTTP”, “Anywhere-IPv4”\n“HTTPS”, “Anywhere-IPv4” while we’re in here (won’t work yet, though)"
  },
  {
    "objectID": "slides/12.html#edit-nginx.conf",
    "href": "slides/12.html#edit-nginx.conf",
    "title": "Intro to Computer Networks",
    "section": "Edit nginx.conf",
    "text": "Edit nginx.conf\n\nsudo cp /etc/nginx/nginx.conf /etc/nginx/nginx-backup.conf\nsudo vim /etc/nginx/nginx.conf\n\nDelete everything below the events block (80dd).\n\nSet up http basics.\n\nhttp {\n  \n  # Enable websockets (needed for Shiny) -- I don't know if this part matters.\n  map $http_upgrade  $connection_upgrade { \n    default upgrade; '' close; \n  }\n  \n  server { listen 80;\n  \n    # You can edit this file if you want a default page.\n    root /usr/share/nginx/html;\n    index index.html index.htm;\n  \n    # I think this was necessary to get it to work.\n    # We'll do more with this in Chapter 13.\n    server_name ec2-12-345-678-90.compute-1.amazonaws.com;\n  }\n}\n\nsudo systemctl restart nginx\nTest it at your “Public IPv4 DNS”."
  },
  {
    "objectID": "slides/12.html#add-rstudio-routing",
    "href": "slides/12.html#add-rstudio-routing",
    "title": "Intro to Computer Networks",
    "section": "Add RStudio routing",
    "text": "Add RStudio routing\n\nAdd a location block inside the http / server section of nginx.conf.\n\n    location /rstudio/ {\n      # Needed only for a custom path prefix of /rstudio\n      rewrite ^/rstudio/(.*)$ /$1 break;\n      \n      proxy_pass http://localhost:8787;\n      \n      proxy_http_version 1.1;\n      proxy_set_header Upgrade $http_upgrade;\n      proxy_set_header Connection $connection_upgrade;\n      proxy_read_timeout 20d;\n      \n      # Not needed if www-root-path is set in rserver.conf\n      proxy_set_header X-RStudio-Root-Path /rstudio;\n      \n      # Optionally, use an explicit hostname and omit the port if using 80/443\n      proxy_set_header Host $host:$server_port;\n    }\n\nsudo systemctl restart nginx\nTest it at your “Public IPv4 DNS” /rstudio."
  },
  {
    "objectID": "slides/12.html#add-plumber-api-routing",
    "href": "slides/12.html#add-plumber-api-routing",
    "title": "Intro to Computer Networks",
    "section": "Add plumber api routing",
    "text": "Add plumber api routing\n\nAdd a location block each time you want to add an API.\n\n    location /palmer/ {\n      # Check the book to see if he has added more!\n      proxy_pass http://localhost:8555/;\n      proxy_set_header Host $host;\n    }\n\nsudo systemctl restart nginx\nTest it at your “Public IPv4 DNS” /palmer/stats and /palmer/__docs__/."
  },
  {
    "objectID": "slides/12.html#meeting-videos",
    "href": "slides/12.html#meeting-videos",
    "title": "Intro to Computer Networks",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1\n\n\n\n\nMeeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "slides/14.html#learning-objectives",
    "href": "slides/14.html#learning-objectives",
    "title": "You should use SSL/HTTPS",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nDetails that we won’t dig into:\n\nIdentify the problems that SSL/https are meant to solve.\nExplain how SSL/https solve those problems.\n\nConfigure SSL on an AWS EC2.\n\nConfigure nginx to identify your domain name.\nUse certbot to set up SSL.\nUpdate the rstudio configuration in nginx to support https.\nOpen the necessary ports on your EC2’s security group."
  },
  {
    "objectID": "slides/14.html#get-ready",
    "href": "slides/14.html#get-ready",
    "title": "You should use SSL/HTTPS",
    "section": "Get ready",
    "text": "Get ready\n\nIf you’ve followed the instructions from Chapter 13, you’re ready to go!\nMake sure you have this line in nginx.conf:\n\nserver_name yourdomain.you www.yourdomain.you;"
  },
  {
    "objectID": "slides/14.html#certbot",
    "href": "slides/14.html#certbot",
    "title": "You should use SSL/HTTPS",
    "section": "certbot",
    "text": "certbot\n\nsudo apt-get install certbot python3-certbot-nginx\nsudo systemctl restart nginx\nsudo certbot –nginx -d yourdomain.you -d www.yourdomain.you"
  },
  {
    "objectID": "slides/14.html#rstudio-in-nginx.conf",
    "href": "slides/14.html#rstudio-in-nginx.conf",
    "title": "You should use SSL/HTTPS",
    "section": "rstudio in nginx.conf",
    "text": "rstudio in nginx.conf\n\nsudo vim /etc/nginx/nginx.conf\nproxy_set_header X-Forwarded-Proto https; in the rstudio location\nsudo systemctl restart nginx"
  },
  {
    "objectID": "slides/14.html#open-the-port",
    "href": "slides/14.html#open-the-port",
    "title": "You should use SSL/HTTPS",
    "section": "Open the port",
    "text": "Open the port\n(you may have already set this up in Chapter 12)\n\n(Log into console.aws.amazon.com and navigate to EC2/Instances)\nClick the “Security” tab on your instance.\nClick the Security group (something like launch-wizard-2)\n\n(or go directly to “Network & Security”/“Security Groups”)\n\n“Inbound rules” &gt; “Edit inbound rules”\n“Add rule”\n\n“HTTPS”, “Anywhere-IPv4”\n\nDiscussion: Leave HTTP, probably?\nVisit https://yourdomain.you/rstudio, http://yourdomain.you/rstudio, etc."
  },
  {
    "objectID": "slides/14.html#meeting-videos",
    "href": "slides/14.html#meeting-videos",
    "title": "You should use SSL/HTTPS",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1\n\n\n\n\nMeeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "slides/16.html#learning-objectives",
    "href": "slides/16.html#learning-objectives",
    "title": "Auth in Enterprise",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nWhat is the difference between authentication and authorization?\nWhat are some different ways to manage permissions? What are the advantages and drawbacks of each?\nWhat is some advantages of token-based auth? Why are most organizations adopting it? Are there any drawbacks?\nFor each of the following, is it a username + password method or a token method? PAM, LDAP, Kerberos, SAML, ODIC/OAuth"
  },
  {
    "objectID": "slides/16.html#introduction",
    "href": "slides/16.html#introduction",
    "title": "Auth in Enterprise",
    "section": "Introduction",
    "text": "Introduction\n\nThe goal of Auth is to manage two desires: everybody should be able to do their work, but nobody should be able to work on something they’re not supposed to\nPeople leave, join, change roles frequently. Having one person with the key to every room is impractical (and unsafe)\nIn “least privilege”, people only get access to the things they need and nothing they don’t\nAuth is all about systems that balance these needs"
  },
  {
    "objectID": "slides/16.html#ldapad",
    "href": "slides/16.html#ldapad",
    "title": "Auth in Enterprise",
    "section": "LDAP/AD",
    "text": "LDAP/AD\n\nAuthentication = knowing who is requesting access to something they need\nAuthorization = checking if that person should have access to the thing they’re asking for\nLightweight Directory Access Protocol (LDAP) or Access Directory (AD) centralizes security by having everyone need only one “key” for every room (one set of username-password credentials)\n\nAuthentication is improved, but authorization is not\nThe communication between the device and the server is not guaranteed to be secure\nYou still need to check credentials at each room repeatedly"
  },
  {
    "objectID": "slides/16.html#single-sign-on-sso",
    "href": "slides/16.html#single-sign-on-sso",
    "title": "Auth in Enterprise",
    "section": "Single Sign On (SSO)",
    "text": "Single Sign On (SSO)\n\nSSO is like getting a key card at the front desk for the day\n\nThe card is given to you if your credentials are correct (authenticated)\nCard maintains your credentials throughout the day\nCard already knows which rooms you need access to (authorized)\n\nManaged by browser’s tokens:\n\nSecurity Assertion Markup Language (SAML 2.0, in XML)\nOpen Identity Connect (OIDC, OAuth2.0, in JSON)\n\nExternal services like Okta, OneLogin, Azure Active Directory are vendors"
  },
  {
    "objectID": "slides/16.html#permissions",
    "href": "slides/16.html#permissions",
    "title": "Auth in Enterprise",
    "section": "Permissions",
    "text": "Permissions\n\nSimple permissions management is just a list e.g. Access Control List (ACL)\nRole Based Access Control (RBAC) defines groups of permissions by person e.g. manager, intern, executive\n\nMore flexible and simple at first\nComplexity creep for each person who thinks they’re “special”\n\nAttribute Based Access Control (ABAC) defines permissions for combinations of the person, task, data, etc.\n\ne.g. AWS Identity and Access Management (IAM) aims to balance complexity with security"
  },
  {
    "objectID": "slides/16.html#why-should-we-care",
    "href": "slides/16.html#why-should-we-care",
    "title": "Auth in Enterprise",
    "section": "Why should we care?",
    "text": "Why should we care?\n\nYour org should be able to equip you with the tools required to be a creative and effective data scientist without jeopardizing their privacy/security\nData access, of course\n\nInternal data sources often only need LDAP-like credentials (not SSO)\nSome orgs use Kerberos to create SSO-like tokens for data\nOthers still use JSON Web Token (JWT) — rare but still new\nIAM is often used for cloud-to-cloud security\n\nService accounts are software that needs permission to do things by itself\n\ne.g. you don’t want to have to sign in yourself for every user who wants to use your secure Shiny app"
  },
  {
    "objectID": "slides/16.html#learning-objectives-1",
    "href": "slides/16.html#learning-objectives-1",
    "title": "Auth in Enterprise",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nWhat is the difference between authentication and authorization?\n\nAuthentication = who is asking?\nAuthorization = what do you want to do?\n\nWhat are some different ways to manage permissions? What are the advantages and drawbacks of each?\n\nIn order of complexity: ACL, RBAC, ABAC\n\nWhat is some advantages of token-based auth? Why are most organizations adopting it? Are there any drawbacks?\n\nReduces complexity by providing one “handshake”, but doesn’t solve everything (e.g. data access, token management)\n\nFor each of the following, is it a username + password method or a token method? PAM, LDAP, Kerberos, SAML, ODIC/OAuth\n\nPAM = username + password\nLDAP = username + password\nKerberos = Token\nSAML = Token\nODIC/OAuth = Token"
  },
  {
    "objectID": "slides/16.html#meeting-videos",
    "href": "slides/16.html#meeting-videos",
    "title": "Auth in Enterprise",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "slides/18.html#learning-objectives",
    "href": "slides/18.html#learning-objectives",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Learning objectives",
    "text": "Learning objectives\n\nWhat are sandboxes and why should we use them?\nWhat is the code promotion process?\nHow does software licensing affect the work you do?\nWhat are some concerns to keep in mind when using free open-source software?"
  },
  {
    "objectID": "slides/18.html#data-science-sandboxes",
    "href": "slides/18.html#data-science-sandboxes",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Data Science Sandboxes",
    "text": "Data Science Sandboxes\n\nKeep dev/test/prod separated\n\nThree components to a sandbox:\n\nfree read-only access to real data\nbroad access to packages\nproduction code promotion process"
  },
  {
    "objectID": "slides/18.html#read-only-access",
    "href": "slides/18.html#read-only-access",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Read-only access",
    "text": "Read-only access\n\nThe last thing you want to do is mess up production data\nThis gives you the access you need without the worry\nAny writes are contained to the sandbox\nYou can also protect your data in completely offline environments\n\nFun fact: Some PCs have to be so secure that they’re considered insecure if they’ve ever connected to any kind of network ever"
  },
  {
    "objectID": "slides/18.html#package-availability",
    "href": "slides/18.html#package-availability",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Package availability",
    "text": "Package availability\n\nYou may have package restrictions (understandable, but :( all the same)\n\nSecurity\nCorrectness\nMaintenance\n\nFree reign in dev is great\n\nYou can keep track of what you use with renv or venv"
  },
  {
    "objectID": "slides/18.html#promotion",
    "href": "slides/18.html#promotion",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Promotion",
    "text": "Promotion\n\nHow do you promote code from dev to test to prod?\nUsually only admins get prod access\nAlways best to discuss a promotion strategy when getting started\n\nDiscussed in chapter 1"
  },
  {
    "objectID": "slides/18.html#devtestprod-for-admins",
    "href": "slides/18.html#devtestprod-for-admins",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Dev/Test/Prod for Admins",
    "text": "Dev/Test/Prod for Admins\n\nJust like you want to keep your package environment safe, admins want your system kept safe\n\nServers, OS, R/Python, etc\n\nPromotion matrix\n\nIT/Admins can upgrade the environment separately from the data science tooling\nIT/Admins like to call development and testing “staging”\n\nThis is where DevOps for Data Science starts to become regular DevOps\n\nInfrastructure as code"
  },
  {
    "objectID": "slides/18.html#infrastructure-as-code-iac",
    "href": "slides/18.html#infrastructure-as-code-iac",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Infrastructure as Code (IaC)",
    "text": "Infrastructure as Code (IaC)\n\nTo get a server to be useful you need two things:\n\nProvision (create) the infrastructure\nConfigure the infrastructure\n\nNo clear dividing line between provisioning and configuring tools\nDocker is part of IaC, but you still need a deployment framework and hypervisor or other container management software\nIaC should be deployed with CI/CD, but doesn’t have to be\nYou’re not safe from your own bad habits\n\nShiny example:\n\nSet up a server\nConfigure network settings\n\n\nSecurity\nPorts\nAnything else\n\n\nInstall R (or Python or whatever)\nInstall Shiny\nHosting software"
  },
  {
    "objectID": "slides/18.html#open-source-in-enterprise",
    "href": "slides/18.html#open-source-in-enterprise",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Open Source in Enterprise",
    "text": "Open Source in Enterprise\nI am not a lawyer and this is not legal advice.\nBut try to be aware of the licenses your software and packages are under\nFour FOSS freedoms:\n\nView and inspect source code\nRun the software\nModify the software\nRedistribute the software\n\nGeneral categories:\n\nPermissive: You can do basically whatever you want\n\nExamples: MIT, Apache, BSD\n\nCopyleft: Derivative works must use the same license\n\nExamples: GPL, AGPL\n\nNot something you want to mess with\nThings get confusing when mixing licenses"
  },
  {
    "objectID": "slides/18.html#package-restrictions",
    "href": "slides/18.html#package-restrictions",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Package Restrictions",
    "text": "Package Restrictions\n\nTo restrict package access, IT Admins must:\n\nRestrict access to public repositories\nProvide an alternative!\n\nDon’t worry about space needed for packages. Most are small\n\nI have 421 packages taking up ~2GB\n\n\n\nLots of kinds of enterprise repository software\n\nTwo main concerns:\n\nManaging vulnerabilities\n\nCode scanners vs common vulnerabliities vs common sense\n\nLicenses\nMaintenance/lifetime"
  },
  {
    "objectID": "slides/18.html#meeting-videos",
    "href": "slides/18.html#meeting-videos",
    "title": "Open Source Data Science in the Enterprise",
    "section": "Meeting Videos",
    "text": "Meeting Videos\nCohort 1"
  },
  {
    "objectID": "videos/02/01.html",
    "href": "videos/02/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:02:43    Gus Lipkin: East Coast US, 1pm local\n00:44:48    Gus Lipkin: https://xkcd.com/927/\n00:57:17    Jack Penzer:    Graph databases &lt;3"
  },
  {
    "objectID": "videos/13/01.html",
    "href": "videos/13/01.html",
    "title": "Cohort 1",
    "section": "",
    "text": "Meeting chat log\n\n00:21:29    novica nakov: it's more fun with more than one key :)\n00:22:45    novica nakov: no you copied in your local folder\n00:28:28    Tinashe Tapera: ssh-copy-id: https://www.ssh.com/academy/ssh/copy-id\n00:41:20    Gus Lipkin: There’s a gui Docker image available for nginx that makes things easier (or more complicated depending on how you feel): https://nginxproxymanager.com/\n00:43:09    Tinashe Tapera: This is really nice\n00:51:45    Ahmed: pretty cool!"
  },
  {
    "objectID": "01.html",
    "href": "01.html",
    "title": "1. Environments as Code",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "1. Environments as Code"
    ]
  },
  {
    "objectID": "01.html#meeting-videos",
    "href": "01.html#meeting-videos",
    "title": "1. Environments as Code",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "1. Environments as Code"
    ]
  },
  {
    "objectID": "03.html",
    "href": "03.html",
    "title": "3. Databases and Data APIs",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "3. Databases and Data APIs"
    ]
  },
  {
    "objectID": "03.html#meeting-videos",
    "href": "03.html#meeting-videos",
    "title": "3. Databases and Data APIs",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "3. Databases and Data APIs"
    ]
  },
  {
    "objectID": "05.html",
    "href": "05.html",
    "title": "5. Deployments and Code Promotion",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "5. Deployments and Code Promotion"
    ]
  },
  {
    "objectID": "05.html#meeting-videos",
    "href": "05.html#meeting-videos",
    "title": "5. Deployments and Code Promotion",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "DevOps Lessons for Data Science",
      "5. Deployments and Code Promotion"
    ]
  },
  {
    "objectID": "07.html",
    "href": "07.html",
    "title": "7. The Cloud",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "7. The Cloud"
    ]
  },
  {
    "objectID": "07.html#meeting-videos",
    "href": "07.html#meeting-videos",
    "title": "7. The Cloud",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "7. The Cloud"
    ]
  },
  {
    "objectID": "09.html",
    "href": "09.html",
    "title": "9. Linux Administration",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "9. Linux Administration"
    ]
  },
  {
    "objectID": "09.html#meeting-videos",
    "href": "09.html#meeting-videos",
    "title": "9. Linux Administration",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "9. Linux Administration"
    ]
  },
  {
    "objectID": "12.html",
    "href": "12.html",
    "title": "12. Computer Networks",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "12. Computer Networks"
    ]
  },
  {
    "objectID": "12.html#meeting-videos",
    "href": "12.html#meeting-videos",
    "title": "12. Computer Networks",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "12. Computer Networks"
    ]
  },
  {
    "objectID": "14.html",
    "href": "14.html",
    "title": "14. SSL/TLS and HTTPS",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "14. SSL/TLS and HTTPS"
    ]
  },
  {
    "objectID": "14.html#meeting-videos",
    "href": "14.html#meeting-videos",
    "title": "14. SSL/TLS and HTTPS",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "IT/Admin for Data Science",
      "14. SSL/TLS and HTTPS"
    ]
  },
  {
    "objectID": "16.html",
    "href": "16.html",
    "title": "16. Auth in Enterprise",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "16. Auth in Enterprise"
    ]
  },
  {
    "objectID": "16.html#meeting-videos",
    "href": "16.html#meeting-videos",
    "title": "16. Auth in Enterprise",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "16. Auth in Enterprise"
    ]
  },
  {
    "objectID": "18.html",
    "href": "18.html",
    "title": "18. Package Management in the Enterprise",
    "section": "",
    "text": "No matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "18. Package Management in the Enterprise"
    ]
  },
  {
    "objectID": "18.html#meeting-videos",
    "href": "18.html#meeting-videos",
    "title": "18. Package Management in the Enterprise",
    "section": "Meeting videos",
    "text": "Meeting videos\n\n\n\n\n\n\n\n\nCohort 1\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items",
    "crumbs": [
      "Enterprise-Grade Data Science",
      "18. Package Management in the Enterprise"
    ]
  }
]