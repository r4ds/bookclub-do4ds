---
engine: knitr
title: Club meetings
---

# Welcome

- Welcome to the DevOps for Data Science book club! 
- book: [do4ds.com](https://do4ds.com/)
- These slides are available at [dslc.io/do4ds](https://dslc.io/do4ds).
- We follow the [Data Science Learning Community Code of Conduct](https://dslc.io/code_of_conduct.html).

::: notes
- You can add notes on each slide with blocks like this!
- Load a deck in the browser and type "s" to see these notes.
:::

## Book club meetings

-   Volunteer leads discussion of a chapter
    -   **This is the best way to learn the material.**
-   Presentations: 
    -   Review of material
    -   Questions you have
    -   Maybe live demo
-   More info about editing: [this github repo](https://github.com/r4ds/bookclub-do4ds)
-   Ideally convert existing Rmd to qmd as we go
-   Recorded, available on the [Data Science Learning Community YouTube Channel (DSLC.video)](http://dslc.video)

## Pace

-   **Goal:** 1 chapter/week
-   Ok to split overwhelming chapters
-   Ok to combine short chapters
-   Meet ***every*** week except holidays, etc
    -   We will meet even if scheduled presenter unavailable

## Learning objectives (LOs)

-   Students who study with LOs in mind ***retain more***
-   **Tips:**
    -   Think "After today's session, you will be able to {LO}"
    -   *Very* roughly **1 per heading**

## Group introductions

- If you feel comfortable sharing:
  - Who are you?
  - Where you calling in from? (If you're not comfortable sharing, skip)
  - How long have you been using R?
  - What was your introduction to R?
  - What are you most looking forward to during the club?

## Learning objectives

-   Recognize the **history of DevOps.**
-   Differentiate between **DevOps** (knowledge, practices, and tools) and **IT/Admins** (people and roles).
-   Recognize **red flags about IT/Admin functions** and what they might indicate.
-   Organize the content that will be **covered in this book.**

## Devops?

-   Grew out of **Agile software development (2001).**
    -   Deliver small units, collect feedback, iterate.
-   Needed similar process to **get the iterations deployed.**
-   **DevOps (~2010)** is the **system/discipline.**

## DevOps vs IT/Admins

-   **DevOps** 
    -   Knowledge, practices, & tools
    -   Put things into prod
    -   Safely & easily
-   **IT/Admins**
    -   People/roles who manage the servers, etc.
    -   Many names:
        -   Information Technology (IT)
        -   SysAdmin
        -   Site Reliability Engineering (SRE)
        -   DevOps
        -   Subdivisions (see next slide)

## Red Flags about IT/Admins

1. **Subdivided** (security, databases, networking, etc)
    -   **Pros:** Super-deep expertise.
    -   **Cons:** Hard to find the right person.
2. **Outsourced**
    -   **Pros:** Companies can get competence fast.
    -   **Cons:** Scheduling, often high turnover.
3. **Nobody**
    -   **Pros:** Freedom!
    -   **Cons:** It's all up to you!

## This Book

-   **Section 1:** Patterns & principles to grease the path to production.
-   **Section 2:** Vocab & beginnings of DIY.
-   **Section 3:** Hands-on DIY. Still very very in progress.

## DevOps Lessons for Data Science

**Learning objectives:**

-   Describe the **core principles of DevOps.**
-   Apply **DevOps best practices** to **data science.**


## The 5 Tenets of DevOps

1.  Code should be **well-tested** and tests should be **automated.**
2.  **Updates** should be **frequent** and **low-risk.**
3.  **Security** concerns should be considered **up front as part of architecture.**
4.  **Production** systems should have **monitoring and logging.**
5.  Frequent opportunities for **review, change, and updating** should be **built into the system** -- both **culturally** and **technically.**

## DevOps for Data Science

-   **Use CI/CD ‚û°Ô∏è Code Promotion and Integration Processes**
    -   Structure output so moving to prod or updating is easy.
-   **Infrastructure as Code ‚û°Ô∏è Manage Environments as Code**
    -   Reproducible & secure environments are... reproducible and secure!
-   **Microservices ‚û°Ô∏è Data Science Project Components**
    -   Figure out how to subdivide things to make updating less painful.
-   **Monitoring & Logging ‚û°Ô∏è Monitoring & Logging**
    -   Data science doesn't do enough of this, but he'll tell us how we should!
-   **Other Things ‚û°Ô∏è Other Things üôÉ**
    -   Chapter about Docker for Data Science here, because it deserves its own chapter.
    -   Section 2 will be all about things like communication, collaboration, and review practices.